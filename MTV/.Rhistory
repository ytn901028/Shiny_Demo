model2 <- glmnet(x,y,alpha=1,nlambda=20,family='gaussian')
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.3,nlambda=20,family='gaussian')
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.2,nlambda=50,family='gaussian')
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
mean(model2$lambda[1:10])
model2 <- glmnet(x,y,alpha=0.2,lambda=301018.6,family='gaussian')
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.5,nlambda=50,family='gaussian')
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
mean(model2$lambda[1:10])
model2 <- glmnet(x,y,alpha=0.5,lambda=120407.4,family='gaussian')
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
View(data)
condo_data <- subset(data,IsCondo==1)
View(condo_data)
library(glmnet)
data<- read.csv('MTV_Data.csv')
rundate <- as.Date(format(Sys.time(), "%Y-%m-%d"))
data$Age <- 2017 - data$Year.Built
data$Lot.Size[which(is.na(data$Lot.Size))] <- median(data$Lot.Size,na.rm=T)
data$Last.Sale.Date <- as.Date(data$Last.Sale.Date,format='%m/%d/%Y')
data$Days_Diff <- rundate - data$Last.Sale.Date
data <- subset(data,Zip==94043&IsCondo==0)
library(glmnet)
data<- read.csv('MTV_Data.csv')
rundate <- as.Date(format(Sys.time(), "%Y-%m-%d"))
data$Age <- 2017 - data$Year.Built
data$Lot.Size[which(is.na(data$Lot.Size))] <- median(data$Lot.Size,na.rm=T)
data$Last.Sale.Date <- as.Date(data$Last.Sale.Date,format='%m/%d/%Y')
data$Days_Diff <- rundate - data$Last.Sale.Date
data <- subset(data,Zip==94043&IsCondo==0)
View(data)
library(glmnet)
data<- read.csv('MTV_Data.csv')
rundate <- as.Date(format(Sys.time(), "%Y-%m-%d"))
data$Age <- 2017 - data$Year.Built
data$Lot.Size[which(is.na(data$Lot.Size))] <- median(data$Lot.Size,na.rm=T)
data$Last.Sale.Date <- as.Date(data$Last.Sale.Date,format='%m/%d/%Y')
data$Days_Diff <- rundate - data$Last.Sale.Date
data <- subset(data,Zip==94043&IsCondo==0)
View(data)
data <- data[,6:ncol(data)]
train <- data[1:(nrow(data)-8),]
validation <- data[(nrow(data)-7):(nrow(data)-2),]
test <- data[(nrow(data)-1):nrow(data),]
formula = {as.formula(Last.Sale.Price
~Beds
+Baths
+Sqft
+Lot.Size
+HOA_Due
+ES_Score
+MS_Score
+HS_Score
+Age
+Days_Diff
+Walk_Score
+Transit_Score
+Views
+Favorites
+Cross_Outs
+IsCondo
)}
x <- model.matrix(object = formula, data=train)
y <- train$Last.Sale.Price
model2 <- glmnet(x,y,alpha=0.5,nlambda=20,family='gaussian')
View(train)
View(x)
View(data)
library(glmnet)
data<- read.csv('MTV_Data.csv')
rundate <- as.Date(format(Sys.time(), "%Y-%m-%d"))
data$Age <- 2017 - data$Year.Built
data$Lot.Size[which(is.na(data$Lot.Size))] <- median(data$Lot.Size,na.rm=T)
data$Last.Sale.Date <- as.Date(data$Last.Sale.Date,format='%m/%d/%Y')
data$Days_Diff <- rundate - data$Last.Sale.Date
data <- subset(data,Zip==94043 & IsCondo==0)
data <- data[,6:ncol(data)]
train <- data[1:(nrow(data)-8),]
validation <- data[(nrow(data)-7):(nrow(data)-2),]
test <- data[(nrow(data)-1):nrow(data),]
formula = {as.formula(Last.Sale.Price
~Beds
+Baths
+Sqft
+Lot.Size
+HOA_Due
+ES_Score
+MS_Score
+HS_Score
+Age
+Days_Diff
+Walk_Score
+Transit_Score
+Views
+Favorites
+Cross_Outs
+IsCondo
)}
x <- model.matrix(object = formula, data=train)
y <- train$Last.Sale.Price
model2 <- glmnet(x,y,alpha=0.5,nlambda=20,family='gaussian')
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
View(validation)
mean(model2$lambda[c(5,7,13,10)])
model2 <- glmnet(x,y,alpha=0.5,lambda=35225.59,family='gaussian')
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.5,nlambda=10,family='gaussian')
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
mean(model2$lambda[c(1,3,4,6,10)])
model2 <- glmnet(x,y,alpha=0.5,lambda=60033.53,family='gaussian')
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.5,lambda=35225.59,family='gaussian')
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.5,nlambda=20,family='gaussian')
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
mean(model2$lambda[c(1,5,7,13,10,20)])
model2 <- glmnet(x,y,alpha=0.5,lambda=53881.19,family='gaussian')
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
new_test <- test
new_test$Last.Sale.Price <- 0
predx <- model.matrix(object=formula,data=new_test)
predict(model2, newx=predx)
View(new_validation)
library(glmnet)
data<- read.csv('MTV_Data.csv')
rundate <- as.Date(format(Sys.time(), "%Y-%m-%d"))
data$Age <- 2017 - data$Year.Built
data$Lot.Size[which(is.na(data$Lot.Size))] <- median(data$Lot.Size,na.rm=T)
data$Last.Sale.Date <- as.Date(data$Last.Sale.Date,format='%m/%d/%Y')
data$Days_Diff <- rundate - data$Last.Sale.Date
data <- subset(data,Zip==94043 & IsCondo==0)
data <- data[,6:ncol(data)]
train <- data[1:(nrow(data)-8),]
validation <- data[(nrow(data)-7):(nrow(data)-2),]
test <- data[(nrow(data)-1):nrow(data),]
formula = {as.formula(Last.Sale.Price
~Beds
+Baths
+Sqft
+Lot.Size
+HOA_Due
+ES_Score
+MS_Score
+HS_Score
+Age
+Days_Diff
+Walk_Score
+Transit_Score
+Views
+Favorites
+Cross_Outs
)}
x <- model.matrix(object = formula, data=train)
y <- train$Last.Sale.Price
#model <- lm(formula=formula,data=train)
#predict(model,test)
model2 <- glmnet(x,y,alpha=0.5,nlambda=20,family='gaussian')
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.5,nlambda=20,family='gaussian',lambda.min.ratio = 0.01)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.5,nlambda=20,family='gaussian',lambda.min.ratio = 0.02)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
View(new_validation)
model2 <- glmnet(x,y,alpha=0.5,family='gaussian',lambda.min.ratio = 0.02)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
library(glmnet)
data<- read.csv('MTV_Data.csv')
rundate <- as.Date(format(Sys.time(), "%Y-%m-%d"))
data$Age <- 2017 - data$Year.Built
data$Lot.Size[which(is.na(data$Lot.Size))] <- median(data$Lot.Size,na.rm=T)
data$Last.Sale.Date <- as.Date(data$Last.Sale.Date,format='%m/%d/%Y')
data$Days_Diff <- rundate - data$Last.Sale.Date
data <- subset(data,Zip==94043 & IsCondo==0)
data <- data[,6:ncol(data)]
train <- data[1:(nrow(data)-8),]
validation <- data[(nrow(data)-7):(nrow(data)-2),]
test <- data[(nrow(data)-1):nrow(data),]
formula = {as.formula(Last.Sale.Price
~Beds
+Baths
+Sqft
+Lot.Size
+HOA_Due
+ES_Score
+MS_Score
+HS_Score
+Age
+Days_Diff
+Walk_Score
+Transit_Score
+Views
+Favorites
+Cross_Outs
)}
x <- model.matrix(object = formula, data=train)
y <- train$Last.Sale.Price
#model <- lm(formula=formula,data=train)
#predict(model,test)
model2 <- glmnet(x,y,alpha=0.5,nlambda=20,family='gaussian',lambda.min.ratio = 0.02)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
View(new_validation)
model2 <- glmnet(x,y,alpha=0.5,family='gaussian',lambda.min.ratio = 0.02)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.5,family='gaussian',lambda.min.ratio = 0.01)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.5,family='gaussian',lambda.min.ratio = 0.005)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.5,family='gaussian',lambda.min.ratio = 0.001)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
mean(model2$lambda)
model2 <- glmnet(x,y,alpha=0.5,lambda=30508.49,family='gaussian',lambda.min.ratio = 0.001)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
new_test <- test
new_test$Last.Sale.Price <- 0
predx <- model.matrix(object=formula,data=new_test)
predict(model2, newx=predx)
library(glmnet)
data<- read.csv('MTV_Data.csv')
rundate <- as.Date(format(Sys.time(), "%Y-%m-%d"))
data$Age <- 2017 - data$Year.Built
data$Lot.Size[which(is.na(data$Lot.Size))] <- median(data$Lot.Size,na.rm=T)
data$Last.Sale.Date <- as.Date(data$Last.Sale.Date,format='%m/%d/%Y')
data$Days_Diff <- rundate - data$Last.Sale.Date
data <- subset(data,Zip==94043 & IsCondo==0)
data <- data[,6:ncol(data)]
train <- data[1:(nrow(data)-8),]
validation <- data[(nrow(data)-7):(nrow(data)-2),]
test <- data[(nrow(data)-1):nrow(data),]
formula = {as.formula(Last.Sale.Price
~Beds
+Baths
+Sqft
+Lot.Size
+HOA_Due
+ES_Score
+MS_Score
+HS_Score
+Age
+Days_Diff
+Walk_Score
+Transit_Score
+Views
+Favorites
+Cross_Outs
)}
x <- model.matrix(object = formula, data=train)
y <- train$Last.Sale.Price
#model <- lm(formula=formula,data=train)
#predict(model,test)
model2 <- glmnet(x,y,alpha=0.5,family='gaussian',lambda.min.ratio = 0.01)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
View(new_validation)
model2 <- glmnet(x,y,alpha=0.5,nlambda=20,family='gaussian',lambda.min.ratio = 0.001)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.5,nlambda=20,family='gaussian',lambda.min.ratio = 0.005)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.5,nlambda=20,family='gaussian',lambda.min.ratio = 0.02)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2$lambda[7]
model2 <- glmnet(x,y,alpha=0.5,lambda=54024.71,family='gaussian',lambda.min.ratio = 0.02)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
new_test <- test
new_test$Last.Sale.Price <- 0
predx <- model.matrix(object=formula,data=new_test)
predict(model2, newx=predx)
model2 <- glmnet(x,y,alpha=0.5,nlambda=20,family='gaussian',lambda.min.ratio = 0.025)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.5,nlambda=20,family='gaussian',lambda.min.ratio = 0.05)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.5,nlambda=20,family='gaussian',lambda.min.ratio = 0.015)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.5,nlambda=20,family='gaussian',lambda.min.ratio = 0.02)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.5,nlambda=20,family='gaussian',lambda.min.ratio = 0.022)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
View(validation)
model2 <- glmnet(x,y,alpha=0.5,nlambda=20,family='gaussian',lambda.min.ratio = 0.021)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.5,nlambda=20,family='gaussian',lambda.min.ratio = 0.019)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.5,nlambda=20,family='gaussian',lambda.min.ratio = 0.0195)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.5,nlambda=20,family='gaussian',lambda.min.ratio = 0.0205)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.5,nlambda=50,family='gaussian',lambda.min.ratio = 0.0205)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.5,family='gaussian',lambda.min.ratio = 0.0205)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
mean(model2$lambda[33])
model2 <- glmnet(x,y,alpha=0.5,lambda=52894.87,family='gaussian',lambda.min.ratio = 0.0205)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
new_test <- test
new_test$Last.Sale.Price <- 0
predx <- model.matrix(object=formula,data=new_test)
predict(model2, newx=predx
)
View(new_validation)
model2 <- glmnet(x,y,alpha=0.5,family='gaussian',lambda.min.ratio = 0.02025)
model2 <- glmnet(x,y,alpha=0.3,family='gaussian',lambda.min.ratio = 0.02025)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.2,family='gaussian',lambda.min.ratio = 0.02025)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0,family='gaussian',lambda.min.ratio = 0.02025)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.15,family='gaussian',lambda.min.ratio = 0.02025)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
mean(model2$lambda[45])
model2$lambda[45]
model2 <- glmnet(x,y,alpha=0.15,lambda=109468.2,family='gaussian',lambda.min.ratio = 0.0205)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
new_test <- test
new_test$Last.Sale.Price <- 0
predx <- model.matrix(object=formula,data=new_test)
predict(model2, newx=predx)
model2 <- glmnet(x,y,alpha=0.1,family='gaussian',lambda.min.ratio = 0.02025)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2$lambda[52]
model2 <- glmnet(x,y,alpha=0.1,lambda=124632.6,family='gaussian',lambda.min.ratio = 0.02025)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
new_test <- test
new_test$Last.Sale.Price <- 0
predx <- model.matrix(object=formula,data=new_test)
predict(model2, newx=predx)
model2 <- glmnet(x,y,alpha=0.1,family='gaussian',lambda.min.ratio = 0.0202)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.1,lambda=124632.6,family='gaussian',lambda.min.ratio = 0.02025)
model2 <- glmnet(x,y,alpha=0.1,family='gaussian',lambda.min.ratio = 0.02)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.1,family='gaussian',lambda.min.ratio = 0.0202)
model2 <- glmnet(x,y,alpha=0.1,family='gaussian',lambda.min.ratio = 0.0205)
model2 <- glmnet(x,y,alpha=0.05,family='gaussian',lambda.min.ratio = 0.0205)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.05,family='gaussian',lambda.min.ratio = 0.02025)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2$lambda[65]
model2 <- glmnet(x,y,alpha=0.05,lambda=149373.3,family='gaussian',lambda.min.ratio = 0.02025)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
new_test <- test
new_test$Last.Sale.Price <- 0
predx <- model.matrix(object=formula,data=new_test)
predict(model2, newx=predx)
rundate <- as.Date(format(Sys.time(), "%Y-%m-%d")) + 4
rundate <- as.Date(format(Sys.time(), "%Y-%m-%d")) + 3
library(glmnet)
data<- read.csv('MTV_Data.csv')
rundate <- as.Date(format(Sys.time(), "%Y-%m-%d")) + 3
data$Age <- 2017 - data$Year.Built
data$Lot.Size[which(is.na(data$Lot.Size))] <- median(data$Lot.Size,na.rm=T)
data$Last.Sale.Date <- as.Date(data$Last.Sale.Date,format='%m/%d/%Y')
data$Days_Diff <- rundate - data$Last.Sale.Date
data <- subset(data,Zip==94043 & IsCondo==0)
data <- data[,6:ncol(data)]
train <- data[1:(nrow(data)-8),]
validation <- data[(nrow(data)-7):(nrow(data)-2),]
test <- data[(nrow(data)-1):nrow(data),]
formula = {as.formula(Last.Sale.Price
~Beds
+Baths
+Sqft
+Lot.Size
+HOA_Due
+ES_Score
+MS_Score
+HS_Score
+Age
+Days_Diff
+Walk_Score
+Transit_Score
+Views
+Favorites
+Cross_Outs
)}
x <- model.matrix(object = formula, data=train)
y <- train$Last.Sale.Price
model2 <- glmnet(x,y,alpha=0.05,family='gaussian',lambda.min.ratio = 0.02025)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2 <- glmnet(x,y,alpha=0.05,family='gaussian',lambda.min.ratio = 0.0201)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
mean(model2$lambda[seq(60,66)])
model2 <- glmnet(x,y,alpha=0.05,lambda=161367.6,family='gaussian',lambda.min.ratio = 0.0201)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
new_test <- test
new_test$Last.Sale.Price <- 0
predx <- model.matrix(object=formula,data=new_test)
predict(model2, newx=predx)
model2 <- glmnet(x,y,alpha=0.05,family='gaussian',lambda.min.ratio = 0.02015)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx)
model2$lambda[65]
model2 <- glmnet(x,y,alpha=0.05,lambda=148896,family='gaussian',lambda.min.ratio = 0.02015)
new_validation <- validation
validx <- model.matrix(object=formula,data=new_validation)
predict(model2, newx=validx
)
new_test <- test
new_test$Last.Sale.Price <- 0
predx <- model.matrix(object=formula,data=new_test)
predict(model2, newx=predx)
